[{"/mnt/c/Users/paulj/desktop/GroupProject/GroupProject/recruitment-app/src/index.js":"1","/mnt/c/Users/paulj/desktop/GroupProject/GroupProject/recruitment-app/src/App.js":"2","/mnt/c/Users/paulj/desktop/GroupProject/GroupProject/recruitment-app/src/components/Register/Register.js":"3","/mnt/c/Users/paulj/desktop/GroupProject/GroupProject/recruitment-app/src/components/Login/Login.js":"4"},{"size":219,"mtime":1612364114358,"results":"5","hashOfConfig":"6"},{"size":330,"mtime":1614655215512,"results":"7","hashOfConfig":"6"},{"size":2825,"mtime":1614634208631,"results":"8","hashOfConfig":"6"},{"size":2151,"mtime":1614658849658,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1ia0rmo",{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/Users/paulj/desktop/GroupProject/GroupProject/recruitment-app/src/index.js",[],["20","21"],"/mnt/c/Users/paulj/desktop/GroupProject/GroupProject/recruitment-app/src/App.js",["22","23","24"],"/mnt/c/Users/paulj/desktop/GroupProject/GroupProject/recruitment-app/src/components/Register/Register.js",["25","26","27"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// import './Login.css';\n\nasync function RegisterUser(credentials) {\n    return fetch('http://localhost:5000/user/register', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n    })\n        .then(data => data.json());\n}\n\nexport default function Register() {\n\n    let PasswordsMatch = false;\n    const [FirstName, setFirstName] = useState();\n    const [LastName, setLastName] = useState();\n    const [Email, setEmail] = useState();\n    const [Password, setPassword] = useState();\n    const [DateOfBirth, setDateOfBirth] = useState();\n\n    const handleSubmit = async e => {\n        checkMatch(document.getElementById(\"confirmPass\").value);\n        e.preventDefault();\n        try {\n            if (!PasswordsMatch) throw (\"PasswordError: Passwords Don't Match\");\n            console.log(\"Submitted\");\n            const token = await RegisterUser({\n                FirstName,\n                LastName,\n                Email,\n                Password,\n                DateOfBirth\n            });\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    const checkMatch = p => {\n        p === Password ? PasswordsMatch = true : PasswordsMatch = false;\n        console.table([p, Password, PasswordsMatch]);\n    }\n\n    return (\n        <div className=\"register-wrapper\">\n            <h1>Please Register</h1>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    <p>First Name</p>\n                    <input type=\"text\" onChange={e => setFirstName(e.target.value)} />\n                </label>\n                <label>\n                    <p>Last Name</p>\n                    <input type=\"text\" onChange={e => setLastName(e.target.value)} />\n                </label>\n                <label>\n                    <p>Email</p>\n                    <input type=\"text\" onChange={e => setEmail(e.target.value)} />\n                </label>\n                <label>\n                    <p>Password</p>\n                    <input id=\"Pass\" type=\"password\" onChange={e => setPassword(e.target.value)} />\n                </label>\n                <label>\n                    <p>Confirm Password</p>\n                    <input id=\"confirmPass\" type=\"password\" onChange={e => checkMatch(e.target.value)} />\n                </label>\n                <label>\n                    <p>Date of Birth</p>\n                    <input type=\"date\" onChange={e => setDateOfBirth(e.target.value)} />\n                </label>\n                <div>\n                    <button type=\"submit\">Submit</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\n// Login.propTypes = {\n//     setToken: PropTypes.func.isRequired\n// }","/mnt/c/Users/paulj/desktop/GroupProject/GroupProject/recruitment-app/src/components/Login/Login.js",["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":10,"nodeType":"36","messageId":"37","endLine":1,"endColumn":23},{"ruleId":"34","severity":1,"message":"38","line":1,"column":25,"nodeType":"36","messageId":"37","endLine":1,"endColumn":30},{"ruleId":"34","severity":1,"message":"39","line":1,"column":32,"nodeType":"36","messageId":"37","endLine":1,"endColumn":38},{"ruleId":"34","severity":1,"message":"40","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":17},{"ruleId":"41","severity":1,"message":"42","line":30,"column":34,"nodeType":"43","messageId":"44","endLine":30,"endColumn":81},{"ruleId":"34","severity":1,"message":"45","line":32,"column":19,"nodeType":"36","messageId":"37","endLine":32,"endColumn":24},{"ruleId":"34","severity":1,"message":"40","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":17},{"ruleId":"41","severity":1,"message":"42","line":39,"column":46,"nodeType":"43","messageId":"44","endLine":39,"endColumn":103},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'PropTypes' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'token' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]